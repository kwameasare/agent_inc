// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: agent.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A sub-task defined by a parent agent.
type SubTaskRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RequestedPersona string                 `protobuf:"bytes,1,opt,name=requested_persona,json=requestedPersona,proto3" json:"requested_persona,omitempty"` // e.g., "You are an expert in embedded firmware development."
	TaskDetails      string                 `protobuf:"bytes,2,opt,name=task_details,json=taskDetails,proto3" json:"task_details,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SubTaskRequest) Reset() {
	*x = SubTaskRequest{}
	mi := &file_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTaskRequest) ProtoMessage() {}

func (x *SubTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTaskRequest.ProtoReflect.Descriptor instead.
func (*SubTaskRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0}
}

func (x *SubTaskRequest) GetRequestedPersona() string {
	if x != nil {
		return x.RequestedPersona
	}
	return ""
}

func (x *SubTaskRequest) GetTaskDetails() string {
	if x != nil {
		return x.TaskDetails
	}
	return ""
}

// The request message containing the full instructions for an agent.
type TaskRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TaskId           string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	PersonaPrompt    string                 `protobuf:"bytes,2,opt,name=persona_prompt,json=personaPrompt,proto3" json:"persona_prompt,omitempty"`                                                                     // The system prompt that defines the agent's role.
	TaskInstructions string                 `protobuf:"bytes,3,opt,name=task_instructions,json=taskInstructions,proto3" json:"task_instructions,omitempty"`                                                            // The specific user prompt/task for the agent.
	ContextData      map[string]string      `protobuf:"bytes,4,rep,name=context_data,json=contextData,proto3" json:"context_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // To pass outputs from other agents.
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TaskRequest) Reset() {
	*x = TaskRequest{}
	mi := &file_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRequest) ProtoMessage() {}

func (x *TaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRequest.ProtoReflect.Descriptor instead.
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{1}
}

func (x *TaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskRequest) GetPersonaPrompt() string {
	if x != nil {
		return x.PersonaPrompt
	}
	return ""
}

func (x *TaskRequest) GetTaskInstructions() string {
	if x != nil {
		return x.TaskInstructions
	}
	return ""
}

func (x *TaskRequest) GetContextData() map[string]string {
	if x != nil {
		return x.ContextData
	}
	return nil
}

// The result message from an agent.
type TaskResult struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	TaskId       string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	FinalContent string                 `protobuf:"bytes,2,opt,name=final_content,json=finalContent,proto3" json:"final_content,omitempty"` // The main artifact (report, code, etc.). Only populated if the task was executed.
	Success      bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// If the agent decided to delegate, this field will be populated.
	// The orchestrator MUST handle this by creating sub-agents.
	SubTasks      []*SubTaskRequest `protobuf:"bytes,5,rep,name=sub_tasks,json=subTasks,proto3" json:"sub_tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{2}
}

func (x *TaskResult) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskResult) GetFinalContent() string {
	if x != nil {
		return x.FinalContent
	}
	return ""
}

func (x *TaskResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TaskResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *TaskResult) GetSubTasks() []*SubTaskRequest {
	if x != nil {
		return x.SubTasks
	}
	return nil
}

var File_agent_proto protoreflect.FileDescriptor

const file_agent_proto_rawDesc = "" +
	"\n" +
	"\vagent.proto\x12\x05agent\"`\n" +
	"\x0eSubTaskRequest\x12+\n" +
	"\x11requested_persona\x18\x01 \x01(\tR\x10requestedPersona\x12!\n" +
	"\ftask_details\x18\x02 \x01(\tR\vtaskDetails\"\x82\x02\n" +
	"\vTaskRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12%\n" +
	"\x0epersona_prompt\x18\x02 \x01(\tR\rpersonaPrompt\x12+\n" +
	"\x11task_instructions\x18\x03 \x01(\tR\x10taskInstructions\x12F\n" +
	"\fcontext_data\x18\x04 \x03(\v2#.agent.TaskRequest.ContextDataEntryR\vcontextData\x1a>\n" +
	"\x10ContextDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbd\x01\n" +
	"\n" +
	"TaskResult\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12#\n" +
	"\rfinal_content\x18\x02 \x01(\tR\ffinalContent\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x122\n" +
	"\tsub_tasks\x18\x05 \x03(\v2\x15.agent.SubTaskRequestR\bsubTasks2F\n" +
	"\fGenericAgent\x126\n" +
	"\vExecuteTask\x12\x12.agent.TaskRequest\x1a\x11.agent.TaskResult\"\x00B\"Z agentic-engineering-system/protob\x06proto3"

var (
	file_agent_proto_rawDescOnce sync.Once
	file_agent_proto_rawDescData []byte
)

func file_agent_proto_rawDescGZIP() []byte {
	file_agent_proto_rawDescOnce.Do(func() {
		file_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agent_proto_rawDesc), len(file_agent_proto_rawDesc)))
	})
	return file_agent_proto_rawDescData
}

var file_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_agent_proto_goTypes = []any{
	(*SubTaskRequest)(nil), // 0: agent.SubTaskRequest
	(*TaskRequest)(nil),    // 1: agent.TaskRequest
	(*TaskResult)(nil),     // 2: agent.TaskResult
	nil,                    // 3: agent.TaskRequest.ContextDataEntry
}
var file_agent_proto_depIdxs = []int32{
	3, // 0: agent.TaskRequest.context_data:type_name -> agent.TaskRequest.ContextDataEntry
	0, // 1: agent.TaskResult.sub_tasks:type_name -> agent.SubTaskRequest
	1, // 2: agent.GenericAgent.ExecuteTask:input_type -> agent.TaskRequest
	2, // 3: agent.GenericAgent.ExecuteTask:output_type -> agent.TaskResult
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_agent_proto_init() }
func file_agent_proto_init() {
	if File_agent_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agent_proto_rawDesc), len(file_agent_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agent_proto_goTypes,
		DependencyIndexes: file_agent_proto_depIdxs,
		MessageInfos:      file_agent_proto_msgTypes,
	}.Build()
	File_agent_proto = out.File
	file_agent_proto_goTypes = nil
	file_agent_proto_depIdxs = nil
}
